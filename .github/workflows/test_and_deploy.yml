name: CI/CD Pipeline

on:
  push:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - name: Install backend dependencies
      working-directory: ./backend
      run: |
        pip install --upgrade pip
        pip install -r requirements.txt pytest httpx

    - name: Run backend tests
      working-directory: ./backend
      run: |
        python -m pytest -v

    - name: Validate Nginx configuration
      run: |
        # Создаем сеть и тестовый бэкенд
        docker network create test-net || true
        docker run -d --name test-backend --network test-net --network-alias backend \
          python:3.12 sh -c "pip install fastapi uvicorn && echo 'from fastapi import FastAPI; app = FastAPI(); @app.get(\"/\") def root(): return {\"status\":\"OK\"}' > app.py && uvicorn app:app --host 0.0.0.0 --port 8000"
        
        sleep 5  # Ждем запуска бэкенда
        
        # Проверяем Nginx
        docker run --rm --network test-net \
          -v $(pwd)/nginx/app.conf:/etc/nginx/conf.d/default.conf \
          nginx:alpine nginx -t
        
        # Очистка
        docker stop test-backend
        docker rm test-backend
        docker network rm test-net

  build-and-deploy:
    needs: test
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Log in to Docker Hub
      run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

    - name: Build and push backend
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/backend:latest ./backend
        docker push ${{ secrets.DOCKER_USERNAME }}/backend:latest

    - name: Build and push nginx
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/nginx:latest ./nginx
        docker push ${{ secrets.DOCKER_USERNAME }}/nginx:latest

    - name: Setup SSH
      uses: webfactory/ssh-agent@v0.7.0
      with:
        ssh-private-key: ${{ secrets.PROD_SSH_PRIVATE_KEY }}

    - name: Deploy
      run: |
        scp -o StrictHostKeyChecking=no ./docker-compose.yml root@${{ secrets.PROD_SERVER_IP }}:/root/app/

        ssh -o StrictHostKeyChecking=no root@${{ secrets.PROD_SERVER_IP }} << 'EOF'
          cd /root/app
          docker-compose down
          docker pull ${{ secrets.DOCKER_USERNAME }}/backend:latest
          docker pull ${{ secrets.DOCKER_USERNAME }}/nginx:latest
          docker-compose up -d
          echo "Deployment completed!"
          docker ps
        EOF
